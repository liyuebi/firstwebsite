<?php

include_once 'database.php';

if (isset($_POST['func'])) {
	
	if ("createTrade" == $_POST['func']) {
		createTradeOrder();
	}
	else if ("cancelTrade" == $_POST['func']) {
		cancelTradeOrder();
	}
	else if ("startTrade" == $_POST['func']) {
		startTradeOrder();
	}
	else if ("saveCredit" == $_POST['func']) {
		saveCredit();
	}
	else if ("confirmPayment" == $_POST['func']) {
		confirmTradeOrderPay();
	}
	else if ("abandonPayment" == $_POST['func']) {
		abandonTradeOrderPay();
	}
	else if ("confirmReceive" == $_POST['func']) {
		confirmReceiveMoney();
	}
}

function createTradeOrder()
{	
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$amount = trim(htmlspecialchars($_POST["amount"]));
	$paypwd = trim(htmlspecialchars($_POST['paypwd']));
	
	if (!isValidMoneyAmount($amount)) {
		echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>'输入的金额无效，请重新输入！'));
		return;		
	}
	
/*
	if ($amount % $refererConsumePoint != 0) {
		$msg = '选择的金额必须是' . $refererConsumePoint . '的倍数！';
		echo json_encode(array('error'=>'true','error_code'=>'7','error_msg'=>$msg));
		return;		
	}
*/

	if ($amount < $exchangeLeast) {
 		$str = '金额不能小于' . $exchangeLeast . '，请重新输入！';
		echo json_encode(array('error'=>'true','error_code'=>'2','error_msg'=>$str));
		return;		
	}
	if ($amount > $exchangeMost) {
 		$str = '金额不能大于' . $exchangeMost . '，请重新输入！';
		echo json_encode(array('error'=>'true','error_code'=>'3','error_msg'=>$str));
		return;		
	}
	
	if ($amount % 100 != 0) {
		echo json_encode(array('error'=>'true','error_code'=>'4','error_msg'=>'金额必须为100的整数倍，请重新输入！'));
		return;				
	}
	
	if (!password_verify($paypwd, $_SESSION["buypwd"])) {
		echo json_encode(array('error'=>'true','error_code'=>'5','error_msg'=>'支付密码出错，请重试！'));
		return;
	}	
	
	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		
		$res = mysqli_query($con, "select * from Credit where UserId='$userid'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表失败，请稍后重试！'));	
			return;
		}
		$row = mysqli_fetch_assoc($res);
		$credit = $row["Credits"];
		
		$handlefee = $amount * 0.1;
		$neededAmount = $amount + $handlefee;
		if ($neededAmount > $credit) {
			echo json_encode(array('error'=>'true','error_code'=>'6','error_msg'=>'您输入的金额超过您的余额，请重新输入！'));	
			return;
		}
				
		$time = time();
		$result = createCreditTradeTable($con);
		if (!$result) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查表失败，请稍后重试！'));	
			return;
		}
		
		// generate trade id
		date_default_timezone_set('PRC');
		$timeStr = date("YmdHis", $time);
		$tradeId = '';
		$isTradeIdSet = false;
		$i = 0;
		// check if tradeId generated by rand is used, only try 10 times to avoid occoping computing resources
		while ($i < 10) {
			
			$num = rand(1, 300);
			if ($num < 10) {
				$tradeId = $timeStr . '00' . $num;
			}
			else if ($num < 100) {
				$tradeId = $timeStr . '0' . $num;
			}
			else {
				$tradeId = $timeStr . $num;
			}
			
			$res1 = mysqli_query($con, "select * from CreditTrade where TradeId='$tradeId'");
			if ($res1) {
				if (mysqli_num_rows($res1) > 0) {
					
					// $tradeId used, choose a new one
				}
				else {
					// $tradeId not used, break
					$isTradeIdSet = true;
					break;
				}
			}
			
			$i = $i + 1;
		}
		
		if (!$isTradeIdSet) {
			echo json_encode(array('error'=>'true','error_code'=>'7','error_msg'=>'生成交易号出错，请稍后重试！'));
			return;
		}
		
		$nickname= $_SESSION['nickname'];
		$phonenum= $_SESSION['phonenum'];
		$result = mysqli_query($con, "insert into CreditTrade (TradeId, SellerId, SellNickN, SellPhoneNum, Quantity, HanderRate, CreateTime, Status)
						VALUES('$tradeId', '$userid', '$nickname', '$phonenum', '$amount', '0.1', '$time', '$creditTradeInited')");
		if (!$result) {
			echo json_encode(array('error'=>'true','error_code'=>'35','error_msg'=>'创建交易失败，请稍后重试！','sql_error'=>mysqli_error($con)));
			return;
		}
		
		$credit = $credit - $neededAmount;
		$result = mysqli_query($con, "update Credit set Credits='$credit' where UserId='$userid'");
		if (!$result) {
			// !!! log error
		}
		
		// 修改用户的积分纪录，增加直推奖励，若失败不影响返回结果
		$result = mysqli_query($con, "insert into CreditRecord (UserId, Amount, HandleFee, CurrAmount, ApplyTime, AcceptTime, WithUserId, Type)
								VALUES($userid, $amount, $handlefee, $credit, $time, $time, 0, $codeCreTradeInit)");
								
		// 添加交易创建记录
		include_once "func.php";
		insertExchangeCreateStatistics($con, $amount);
		
		echo json_encode(array('error'=>'false'));
	}
	return;
}

function cancelTradeOrder()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$idx = trim(htmlspecialchars($_POST["idx"]));
	
	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		
		$res = mysqli_query($con, "select * from CreditTrade where IdxId='$idx'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表交易失败，请稍后重试！'));	
			return;
		}	
		
		$row = mysqli_fetch_assoc($res);
		$status = $row["Status"];

		if ($userid != $row["SellerId"]) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查询交易出错，请稍后重试！'));	
			return;
		}

		if ($status != $creditTradeInited) {
			echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>'交易状态改变，请稍后重试！'));	
			return;
		}
		
		$now = time();
		$res1 = mysqli_query($con, "update CreditTrade set CancelTime='$now', Status='$creditTradeCancelled' where IdxId='$idx'");
		if (!$res1) {
			echo json_encode(array('error'=>'true','error_code'=>'2','error_msg'=>'确认支付失败，请稍后重试！'));	
			return;			
		}

		// 退款
		$quantity = $row["Quantity"];
		$handleRate = $row["HanderRate"];
		$handleFee = $quantity * $handleRate;
		$sellid = $row["SellerId"];
		refundSeller($con, $sellid, $quantity, $handleFee);

 	}
	
	echo json_encode(array('error'=>'false'));	
}

function startTradeOrder()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$amount = trim(htmlspecialchars($_POST["amount"]));
	$idx = trim(htmlspecialchars($_POST["idx"]));
	
	if (!isValidMoneyAmount($amount)) {
		echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>'输入的金额无效，请重新输入！'));
		return;		
	}
	if ($amount % 100 != 0) {
		echo json_encode(array('error'=>'true','error_code'=>'2','error_msg'=>'交易金额必须是100的倍数，请重新输入！'));
		return;		
	}	
	
	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		$nickname= $_SESSION['nickname'];
		
		$res = mysqli_query($con, "select * from CreditTrade where IdxId='$idx'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表交易失败，请稍后重试！'));	
			return;
		}	
		
		$row = mysqli_fetch_assoc($res);
		$status = $row["Status"];
		
		if ($userid == $row["SellerId"]) {
			echo json_encode(array('error'=>'true','error_code'=>'3','error_msg'=>'不能购买自己的挂单！'));	
			return;
		}
		
		if ($status != $creditTradeInited) {
			echo json_encode(array('error'=>'true','error_code'=>'4','error_msg'=>'交易状态改变，请稍后重试！'));	
			return;
		}
		
		$now = time();
		$createTime = $row["CreateTime"];
		if ($now - $createTime >= 60 * 60 * $exchangeBuyHours) {
			
			// 修改交易状态
			mysqli_query($con, "update CreditTrade set Status='$creditTradeExpired' where IdxId='$idx'");
			// 退款
			
			echo json_encode(array('error'=>'true','error_code'=>'5','error_msg'=>'该交易已过期，请重新选择其他交易！'));	
			return;	
		}
		
		if ($amount > $row["Quantity"]) {
			echo json_encode(array('error'=>'true','error_code'=>'6','error_msg'=>'超过交易总额度，请重新输入！'));	
			return;			
		}
		
		$res1 = mysqli_query($con, "update CreditTrade set BuyerId='$userid', BuyerNickN='$nickname', BuyCnt='$amount', ReserveTime='$now', Status='$creditTradeReserved' where IdxId='$idx'");
		if (!$res1) {
			echo json_encode(array('error'=>'true','error_code'=>'7','error_msg'=>'确认订单失败，请稍后重试'));	
			return;			
		}
	}
	
	echo json_encode(array('error'=>'false'));
}

function refundSeller($con, $sellid, $quantity, $handleFee)
{
	include 'constant.php';
	
	$res = mysqli_query($con, "select * from Credit where UserId='$sellid'");
	if (!$res || mysqli_num_rows($res) <= 0) {
		// !!! log error
		return false;
	}
	else {
		$row = mysqli_fetch_assoc($res);
		$credit = $row["Credits"];
		
		$credit = $credit + $quantity + $handleFee;
		$res1 = mysqli_query($con, "update Credit set Credits='$credit' where UserId='$sellid'");
		if (!$res1) {
			// !!! log error
			return false;
		}
		else {
			$amount = $quantity+$handleFee;
			$now = time();
			$res2 = mysqli_query($con, "insert into CreditRecord (UserId, Amount, HandleFee, CurrAmount, ApplyTime, AcceptTime, WithUserId, Type)
							VALUES($sellid, $amount, 0, $credit,  $now, $now, 0, $codeCreTradeCancel)");
			if (!$res2) {
				// !!! log error
				return false;
			}
		}
	}
	
	return true;
}

function buyerRecieveMoney($con, $idx, $status, $buyerId, $sellId, $quantity, $handleRate, $buyCnt, &$error_msg)
{
	include 'constant.php';
	$now = time();
	
	$res1 = mysqli_query($con, "update CreditTrade set ConfirmTime='$now', Status='$status' where IdxId='$idx'");
	if (!$res1) {
		$error_msg = '确定收货失败，请稍后重试!';	
		return false;			
	}
	
	$res3 = mysqli_query($con, "select * from Credit where UserId='$buyerId'");
	if (!$res3 || mysqli_num_rows($res3) <= 0) {
		// !!! log error
	}
	else {
		
		$row3 = mysqli_fetch_assoc($res3);
		$credit = $row3["Credits"];
		$credit += $buyCnt;
		
		$res4 = mysqli_query($con, "update Credit set Credits='$credit' where UserId='$buyerId'");
		if (!$res4) {
			// !!! log error
		}
		else {
			$res5 = mysqli_query($con, "insert into CreditRecord (UserId, Amount, HandleFee, CurrAmount, ApplyTime, AcceptTime, WithUserId, Type)
				VALUES($buyerId, $buyCnt, 0, $credit, $now, $now, 0, $codeCreTradeRec)");		
			if (!$res5) {
				// !!! log error
			}
		}
	}
	
	$handleFee = $quantity * $handleRate;
	$actualHandleFee = $handleFee;
	if ($buyCnt != $quantity) {
		$res3 = mysqli_query($con, "select * from Credit where UserId='$sellId'");
		if (!$res3 || mysqli_num_rows($res3) <= 0) {
			// !!! log error
		}
		else {
			$actualHandleFee = $buyCnt * $handleRate;
			$refund = $quantity - $buyCnt + $handleFee - $actualHandleFee;
			
			$row3 = mysqli_fetch_assoc($res3);
			$credit = $row3["Credits"];
			$credit += $refund;
			
			$res4 = mysqli_query($con, "update Credit set Credits='$credit' where UserId='$sellId'");
			if (!$res4) {
				// !!! log error
			}
			else {
				$res5 = mysqli_query($con, "insert into CreditRecord (UserId, Amount, HandleFee, CurrAmount, ApplyTime, AcceptTime, WithUserId, Type)
					VALUES($sellId, $refund, 0, $credit, $now, $now, 0, $codeCreTradeSucc)");		
				if (!$res5) {
					// !!! log error
				}
			}
		}
	}
	
	include_once "func.php";
	insertExchangeSuccessStatistics($con, $buyCnt, $actualHandleFee);
	return true;
}

function confirmTradeOrderPay()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$idx = trim(htmlspecialchars($_POST["idx"]));

	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		
		$res = mysqli_query($con, "select * from CreditTrade where IdxId='$idx'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表交易失败，请稍后重试！'));	
			return;
		}	
		
		$row = mysqli_fetch_assoc($res);
		$status = $row["Status"];

		if ($userid != $row["BuyerId"]) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查询交易出错，请稍后重试！'));	
			return;
		}
		
		if ($status != $creditTradeReserved) {
			echo json_encode(array('error'=>'true','error_code'=>'33','error_msg'=>'交易状态改变，请稍后重试！'));	
			return;
		}

		$now = time();
		$reserveTime = $row["ReserveTime"];
		if ($now - $reserveTime >= 60 * 60 * $exchangePayHours) {
			
			// 修改订单状态
			mysqli_query($con, "update CreditTrade set Status='$creditTradeNotPayed' where IdxId='$idx'");
			// 退款
			$quantity = $row["Quantity"];
			$handleRate = $row["HanderRate"];
			$handleFee = $quantity * $handleRate;
			$sellid = $row["SellerId"];
			refundSeller($con, $sellid, $quantity, $handleFee);
						
			echo json_encode(array('error'=>'true','error_code'=>'5','error_msg'=>'该交易已过期，请重新选择其他交易！'));	
			return;	
		}
	
		$res1 = mysqli_query($con, "update CreditTrade set PayTime='$now', Status='$creditTradePayed' where IdxId='$idx'");
		if (!$res1) {
			echo json_encode(array('error'=>'true','error_code'=>'6','error_msg'=>'确认支付失败，请稍后重试！'));	
			return;			
		}
	}
	
	echo json_encode(array('error'=>'false'));
}

function abandonTradeOrderPay()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$idx = trim(htmlspecialchars($_POST["idx"]));
	
	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		
		$res = mysqli_query($con, "select * from CreditTrade where IdxId='$idx'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表交易失败，请稍后重试！'));	
			return;
		}	
		
		$row = mysqli_fetch_assoc($res);
		$status = $row["Status"];

		if ($userid != $row["BuyerId"]) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查询交易出错，请稍后重试！'));	
			return;
		}
		
		if ($status != $creditTradeReserved) {
			echo json_encode(array('error'=>'true','error_code'=>'33','error_msg'=>'交易状态改变，请稍后重试！'));	
			return;
		}

		$now = time();
	
		$res1 = mysqli_query($con, "update CreditTrade set Status='$creditTradeAbandoned' where IdxId='$idx'");
		if (!$res1) {
			echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>'取消订单失败，请稍后重试!'));	
			return;			
		}
		
		// 退款	
		$quantity = $row["Quantity"];
		$handleRate = $row["HanderRate"];
		$handleFee = $quantity * $handleRate;
		$sellid = $row["SellerId"];
		
		refundSeller($con, $sellid, $quantity, $handleFee);
	}
	
	echo json_encode(array('error'=>'false'));
}

function confirmReceiveMoney()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$idx = trim(htmlspecialchars($_POST["idx"]));
	
	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];
		
		$res = mysqli_query($con, "select * from CreditTrade where IdxId='$idx'");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表交易失败，请稍后重试！'));	
			return;
		}		
		
		$row = mysqli_fetch_assoc($res);
		$status = $row["Status"];

		if ($userid != $row["SellerId"]) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查询交易出错，请稍后重试！'));	
			return;
		}

		if ($status != $creditTradePayed) {
			echo json_encode(array('error'=>'true','error_code'=>'33','error_msg'=>'交易状态改变，请稍后重试！'));	
			return;
		}
		
		$buyerId = $row["BuyerId"];
		$buyCnt = $row["BuyCnt"];
		$quantity = $row["Quantity"];
		$handleRate = $row["HanderRate"];
		$error_msg = '';

		if (!buyerRecieveMoney($con, $idx, $creditTradeConfirmed, $buyerId, $userid, $quantity, $handleRate, $buyCnt, $error_msg)) {
			echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>$error_msg));	
			return;			
		}
	}	
	
	echo json_encode(array('error'=>'false'));
}

function saveCredit()
{
	include 'regtest.php';
	include 'constant.php';
	
	session_start();
	if (!$_SESSION["isLogin"]) {
		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$amount = trim(htmlspecialchars($_POST["amount"]));
	
	if (!isValidMoneyAmount($amount)) {
		echo json_encode(array('error'=>'true','error_code'=>'1','error_msg'=>'输入的金额无效，请重新输入！'));
		return;		
	}	
	if ($amount % 100 != 0) {
		echo json_encode(array('error'=>'true','error_code'=>'2','error_msg'=>'交易金额必须是100的倍数，请重新输入！'));
		return;		
	}	
	if ($amount < $saveCreditLeast) {
		$str = '存储额度不能小于' . $saveCreditLeast . '，请重新输入！';
		echo json_encode(array('error'=>'true','error_code'=>'3','error_msg'=>$str));
		return;
	}
	else if ($amount > $saveCreditMost) {
		$str = '存储额度不能大于' . $saveCreditMost . '，请重新输入！';
		echo json_encode(array('error'=>'true','error_code'=>'4','error_msg'=>$str));
		return;		
	}

	$con = connectToDB();
	if (!$con)
	{
		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}
	else 
	{
		$userid = $_SESSION['userId'];

		$res5 = mysqli_query($con, "select * from ClientTable where UserId='$userid'");
		if (!$res5 || mysqli_num_rows($res5) <= 0) {
			return;
		}
		$row5 = mysqli_fetch_assoc($res5);
		$recoCnt = $row5["RecoCnt"];
		
		$res1 = mysqli_query($con, "select * from Credit where UserId='$userid'");
		if (!$res1 || mysqli_num_rows($res1) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'31','error_msg'=>'查表失败，请稍后重试！'));
			return;
		}
		$row1 = mysqli_fetch_assoc($res1);
		$credit = $row1["Credits"];
		if ($amount > $credit) {
			echo json_encode(array('error'=>'true','error_code'=>'5','error_msg'=>'存储金额大于您持有的金额，请重新输入！'));
			return;	
		}
		
		$result = createCreditBankTable($con);
		if (!$result) {
			echo json_encode(array('error'=>'true','error_code'=>'32','error_msg'=>'查表失败，请稍后重试！'));
			return;
		}

		// 查看现在的总存储额是否超过存储上限
		$res = mysqli_query($con, "select sum(Invest), count(*) from CreditBank where UserId='$userid' and Type='1' and Balance > 0");
		if (!$res || mysqli_num_rows($res) <= 0) {
			echo json_encode(array('error'=>'true','error_code'=>'6','error_msg'=>'查验存储金额失败，请稍后重试！'));
			return;	
		}		
		$row = mysqli_fetch_assoc($res);
		if ($row["count(*)"] > 0) {

			// 为推荐的用户只能存储两笔（包括注册时的那一笔）
			if ($recoCnt <= 0 && $row["count(*)"] >= 2) {
				echo json_encode(array('error'=>'true','error_code'=>'11','error_msg'=>'您已存储两笔，不能继续存储。分享新用户可享更多存储机会，快去分享吧！'));
				return;					
			}

			$total = $row["sum(Invest)"];
			if ($total >= $saveCreditMost) {
				echo json_encode(array('error'=>'true','error_code'=>'7','error_msg'=>'您的存储额度已满，请等任一存款余额领取结束才能继续存储！'));
				return;	
			}
			else if ($amount > $saveCreditMost - $total) {
				$msg = "您剩余的存储额度为" . ($saveCreditMost - $total) . "，请重新输入！";
				echo json_encode(array('error'=>'true','error_code'=>'8','error_msg'=>$msg));
				return;	
			}
		}

		$newAsset = $amount * 3;
		$charity = floor($newAsset * $charityRate * 100) / 100;
		$pnts = floor($newAsset * $pntsRate * 100) / 100;	
		$pntsReturnDirect = floor($pnts * $pntsReturnDirRate * 100) / 100;
		$pntsInBank = $pnts - $pntsReturnDirect;
		$diviCnt = floor($amount * $dayBonusRate * 100) / 100;
		$quantity = $newAsset - $charity - $pnts;
		$now = time();
		
		$res = mysqli_query($con, "insert into CreditBank (UserId, Quantity, Invest, Balance, DiviCnt, SaveTime, Type)
								values('$userid', '$quantity', '$amount', '$quantity', '$diviCnt', '$now', '1')");
		if (!$res) {
			echo json_encode(array('error'=>'true','error_code'=>'9','error_msg'=>'存储线上资产失败，请稍后重试！'));
			return;	
		}
		$newSaveId = mysqli_insert_id($con);

		// insert pnts saving into credit bank for return to user
		if ($pntsInBank > 0) {
			$pntsDiviCnt = floor($pntsInBank * $dayPntsBonusRate * 100) / 100;
			$res = mysqli_query($con, "insert into CreditBank (UserId, Quantity, Invest, Balance, DiviCnt, SaveTime, Type)
								values('$userid', '$pntsInBank', '$amount', '$pntsInBank', '$pntsDiviCnt', '$now', '2')");
			if (!$res) {
				// !!! log error
			}
		}

		$credit -= $amount;
		$vault = $row1["Vault"] + $quantity;
		$newPnts = $row1["Pnts"] + $pntsReturnDirect;
		$newCharity = $row1["Charity"] + $charity;
		
		$res2 = mysqli_query($con, "update Credit set Credits='$credit', Vault='$vault', Pnts='$newPnts', Charity='$newCharity' where UserId='$userid'");
		if (!$res2) {
			// echo json_encode(array('error'=>'true','error_code'=>'10','error_msg'=>'更新数据失败，请稍后重试！'));
			// return;	
			// !!! log error
		}

		$res3 = mysqli_query($con, "insert into CreditRecord (UserId, Amount, HandleFee, CurrAmount, ApplyTime, AcceptTime, WithUserId, Type)
						VALUES($userid, $amount, 0, $credit,  $now, $now, 0, $codeSave)");
		if (!$res3) {
			// !!! log error
		}

		if ($pntsReturnDirect > 0) {
			$res4 = mysqli_query($con, "insert into PntsRecord (UserId, Amount, CurrAmount, ApplyTime, ApplyIndexId, Type)
								values('$userid', '$pntsReturnDirect', '$newPnts', '$now', '$newSaveId', '$code2Save')");
			if (!$res4) {
				// !!! log error
			}
		}
		
		include_once "func.php";
		$res4 = mysqli_query($con, "select * from ClientTable where UserId='$userid'");
		if (!$res4 || mysqli_num_rows($res4) <= 0) {
			// !!! log error
		}
		else {
			
			$row4 = mysqli_fetch_assoc($res4);
			$parentId = $row4['ParentId'];
			attributeCollisionBonus($con, $parentId, $userid, $amount, $colliBonusRateReinv, $codeColliBonusRe);
		}
		
		// 添加复投数据统计
		insertReinventStatistics($con, $amount, $newAsset, $charity);
	}
	
	echo json_encode(array('error'=>'false'));
}

function updateUserExchangeOrder()
{
	if (!$_SESSION["isLogin"]) {
// 		echo json_encode(array('error'=>'true','error_code'=>'20','error_msg'=>'请先登录！'));
		return;
	}
	
	$con = connectToDB();
	if (!$con)
	{
// 		echo json_encode(array('error'=>'true','error_code'=>'30','error_msg'=>'设置失败，请稍后重试！'));
		return;
	}

	$userid = $_SESSION['userId'];

	updateUserExchangeBuy($con, $userid);
	updateUserExchangeSell($con, $userid);
}

/*
 * 更新作为买家的交易订单
 */
function updateUserExchangeBuy($con, $userid)
{
	include "constant.php";
	
	$res = mysqli_query($con, "select * from CreditTrade where BuyerId='$userid'");
	$now = time();
	
	while ($row = mysqli_fetch_assoc($res)) {
				
		$status = $row["Status"];
		$idx = $row["IdxId"];
		if ($creditTradeReserved == $status) {
			
			$reserveTime = $row["ReserveTime"];
			if ($now - $reserveTime >= 60 * 60 * $exchangePayHours) {
				
				$res2 = mysqli_query($con, "update CreditTrade set Status='$creditTradeNotPayed' where IdxId='$idx'");	
				if ($res2) {
					
					$sellId = $row["SellerId"];
					$quantity = $row["Quantity"];
					$handleFee = $quantity * $row["HanderRate"];
					refundSeller($con, $sellId, $quantity, $handleFee);
				}
			}
		}
		else if ($creditTradePayed == $status) {
			
			$payedTime = $row["PayTime"];
			if ($now - $payedTime >= 60 * 60 * $exchangeDeliveryHours) {
				
				$res2 = mysqli_query($con, "update CreditTrade set Status='$creditTradeAutoConfirmed' where IdxId='$idx'");
				if ($res2) {
				
					$buyerId = $row["BuyerId"];
					$sellId = $row["SellerId"];
					$buyCnt = $row["BuyCnt"];
					$quantity = $row["Quantity"];
					$handleRate = $row["HanderRate"];
					$error_msg = '';
					buyerRecieveMoney($con, $idx, $creditTradeAutoConfirmed, $buyerId, $sellId, $quantity, $handleRate, $buyCnt, $error_msg);
				}
			}
		}
	}
}

/*
 * 更新作为卖家的交易订单
 */
function updateUserExchangeSell($con, $userid)
{
	include "constant.php";
	
	$res = mysqli_query($con, "select * from CreditTrade where SellerId='$userid'");
	$now = time();
	
	while ($row = mysqli_fetch_assoc($res)) {
		
		$status = $row["Status"];
		$idx = $row["IdxId"];
		if ($creditTradeInited == $status) {
			
			$createTime = $row["CreateTime"];
			if ($now - $createTime >= 60 * 60 * $exchangeBuyHours) {
				
				$res2 = mysqli_query($con, "update CreditTrade set Status='$creditTradeExpired' where IdxId='$idx'");
				if ($res2) {
					
					$sellId = $row["SellerId"];
					$quantity = $row["Quantity"];
					$handleFee = $quantity * $row["HanderRate"];
					refundSeller($con, $sellId, $quantity, $handleFee);
				}
			}
		}
		else if ($creditTradeReserved == $status) {
			
			$reserveTime = $row["ReserveTime"];
			if ($now - $reserveTime >= 60 * 60 * $exchangePayHours) {
				
				$res2 = mysqli_query($con, "update CreditTrade set Status='$creditTradeNotPayed' where IdxId='$idx'");	
				if ($res2) {
					
					$sellId = $row["SellerId"];
					$quantity = $row["Quantity"];
					$handleFee = $quantity * $row["HanderRate"];
					refundSeller($con, $sellId, $quantity, $handleFee);
				}
			}
		}
		else if ($creditTradePayed == $status) {
			
			$payedTime = $row["PayTime"];
			if ($now - $payedTime >= 60 * 60 * $exchangeDeliveryHours) {
				
				$res2 = mysqli_query($con, "update CreditTrade set Status='$creditTradeAutoConfirmed' where IdxId='$idx'");
				if ($res2) {
					
					$buyerId = $row["BuyerId"];
					$sellId = $row["SellerId"];
					$buyCnt = $row["BuyCnt"];
					$quantity = $row["Quantity"];
					$handleRate = $row["HanderRate"];
					$error_msg = '';
					buyerRecieveMoney($con, $idx, $creditTradeAutoConfirmed, $buyerId, $sellId, $quantity, $handleRate, $buyCnt, $error_msg);
				}
			}
		}		
	}
}
	
?>